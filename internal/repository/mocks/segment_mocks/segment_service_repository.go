// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/nikitads9/segment-service-api/internal/repository/segment (interfaces: Repository)

// Package segment_mocks is a generated GoMock package.
package segment_mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRepository is a mock of Repository interface.
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository.
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance.
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// AddSegment mocks base method.
func (m *MockRepository) AddSegment(arg0 context.Context, arg1 string) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddSegment", arg0, arg1)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddSegment indicates an expected call of AddSegment.
func (mr *MockRepositoryMockRecorder) AddSegment(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddSegment", reflect.TypeOf((*MockRepository)(nil).AddSegment), arg0, arg1)
}

// RemoveSegment mocks base method.
func (m *MockRepository) RemoveSegment(arg0 context.Context, arg1 int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveSegment", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveSegment indicates an expected call of RemoveSegment.
func (mr *MockRepositoryMockRecorder) RemoveSegment(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveSegment", reflect.TypeOf((*MockRepository)(nil).RemoveSegment), arg0, arg1)
}
